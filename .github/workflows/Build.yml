# XmlPSProfile Workflow
# If I want to create a release: https://github.com/actions/create-release

# Will tag if all tests pass in both powershell and pwsh
name: Build

on:
  push:
    # Allowed branches
    # Only dev should be run for tagging 
    branches: 
      - dev
    # Ignored Files and paths
    # Only files that will trigger a tag are app powershell scripts
    # powershell scripts in the StartScipts are considered config
    paths-ignore:
      - '**.md'
      - '**.yml'
      - '**.json'
      - 'Config/**.xml' # Because there is an .xml in the SQL directory 
      - '**.xsd'
      - '**.txt'
      - '**.log'
      - '.gitignore'
      - 'StartScripts/**'
      - 'Cache/**'
      - 'Tests/Scripts/**' # Do not tag any changes from the test scripts

jobs:
  # Powershell on Windows
  TEST-Powershell:
    runs-on: windows-latest # On windows VM

    steps:
    - uses: actions/checkout@v2

    - name: Run tests
      shell: powershell
      run: |
        Write-Host "`nLoading Profile";
        .\Profile.ps1 -BuildPath:$(".\Tests\Profile.xml");
        Write-Host "`nRunning Test Scripts";
        Run-Tests;

  # Powershell 7 on Windows
  TEST-pwsh:
    runs-on: windows-latest # On windows VM

    steps:
    - uses: actions/checkout@v2

    - name: Run tests
      shell: pwsh
      run: |
        Write-Host "`nLoading Profile";
        .\Profile.ps1 -BuildPath:$(".\Tests\Profile.xml");
        Write-Host "`nRunning Test Scripts";
        Run-Tests;

  Tag-Commit:
    needs: [TEST-Powershell, TEST-pwsh]
    runs-on: windows-latest # On windows VM

    steps:
    - uses: actions/checkout@v2

    - name: Retrieve all branches and tags
      shell: pwsh
      run: |
        git fetch --prune --unshallow --tags

    - name: Set new tag
      shell: pwsh
      run: |
        if(Test-Path .\.github\tagging)
        {
          git clone https://github.com/BrandonMFong/xPro.git

          [string]$repodir = $(pwd).path;
          # [string]$ProfileScript = $repodir + "\xPro\Profile.ps1";
          [string]$SetTagPath = $repodir + "\xPro\Functions\DetermineTagType.ps1";
          # [string]$PathToAutoGit = $repodir + ".\xPro\.github\tagging\Profile.xml";

          #& $ProfileScript -BuildPath:$PathToAutoGit -Silent:$true;
          $env:GIT_REDIRECT_STDERR = '2>&1';
          & $SetTagPath -Push:$true -PathToVersionConfig:$("$($repodir)\.github\tagging\Version.json") -PathToTag:$($repodir);
        }

# TODO: make ubuntu and mac workflow
