<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
<!--https://www.liquid-technologies.com/xml-schema-tutorial/xsd-elements-attributes-->

<xs:element name="Machine">
    <xs:attribute name="MachineName"/>
    <xs:element name="StartScript">
        <xs:attribute name="ClearHost" type="boolean" use="mandatory">
            <xs:annotation>
                <xs:documentation>
                    Default is false.  Suggest to keep it false for debug.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:element>
    
    <xs:element name="Directories" maxOccurs="1">
        <xs:annotation>
            <xs:documentation>
                Parameters that are used in Goto.ps1 nad put.ps1 function
            </xs:documentation>
        </xs:annotation>
        <xs:element name="Directory" type="xs:string" minOccurs="1">
            <xs:attribute name="alias" type="xs:string" use="mandatory"/>
            <xs:attribute name="SecurityType" type="xs:string" use="required">
                <xs:annotation>
                    <xs:documentation>
                        Default 'public'.  Options: 'public' or 'private'
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:annotation>
                <xs:documentation>
                    File path for alias
                </xs:documentation>
            </xs:annotation>
        </xs:element>
    </xs:element>

    <!-- Objects -->
    <xs:attributeGroup name="HashTableObjectAttributes">
        <xs:attribute name="SecurityType" use="mandatory">
            <xs:annotation>
                <xs:documentation>
                    public or private. If you are pointing to a level, use public
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Lvl" use="optional">
            <xs:annotation>
                <xs:documentation>
                    Level of the node or hash table (still determining the name)
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:group name="HashTableObjectElement">
        <xs:element name="Key" minOccurs="1">
            <xs:attributeGroup ref="HashTableObjectAttributes"/>
            <xs:attribute name="Node" type="xs:string" use="optional">
                <xs:annotation>
                    <xs:documentation>
                        Unique id for the node pointer to point to
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:element>
        <xs:element name="Value" minOccurs="1">
            <xs:attributeGroup ref="HashTableObjectAttributes"/>
            <xs:attribute name="Node" type="xs:string" use="optional">
                <xs:annotation>
                    <xs:documentation>
                        Unique id for the node pointer to point to
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="NodePointer" use="optional">
                <xs:annotation>
                    <xs:documentation>
                        Provide a unique id to point to the next node value
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:element>
    </xs:group>

    <xs:group name="XMLElement">
        <xs:element name="Values">
            <xs:any/>
            <xs:annotation>
                <xs:documentation>
                    Any node here can be referenced on the command line by the element name.
                </xs:documentation>
            </xs:annotation>
        </xs:element>
    </xs:group>

    <xs:group name="ClassElement">
        <xs:element name="Class" maxOccurs="1">
            <xs:attribute name="ClassName" use="mandatory"/>
            <xs:attribute name="HasParams" use="mandatory" type="boolean"/>
            <xs:annotation>
                <xs:documentation>
                    Nodes below here can be reference when creating a class. 
                </xs:documentation>
            </xs:annotation>
            <!--For SQL Class-->
            <xs:element name="SQL" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        Parameters for SQL class include Database name, Server Instance, and a list of tables.
                    </xs:documentation>
                </xs:annotation>
                <xs:element name="Database" minOccurs="1" maxOccurs="1"/>
                <xs:element name="ServerInstance" minOccurs="1" maxOccurs="1"/>
                <xs:complexType name="Tables" minOccurs="1" maxOccurs="1">
                    <xs:sequence>
                        <xs:any maxOccurs="unbounded" minOccurs="0"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:element>
    </xs:group>

    <xs:element name="Objects">
        <xs:attribute name="Database" type="xs:boolean" use="mandatory">
            <xs:annotation>
                <xs:documentation>
                    For the HashTable decoding to work, you need to define this attribute
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="ServerInstance" type="xs:boolean" use="mandatory">
            <xs:annotation>
                <xs:documentation>
                    For the HashTable decoding to work, you need to define this attribute
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:element name="Object">
            <xs:annotation>
                <xs:documentation>
                    Must have one Object element for every object you want to refer to on the cmd line.
                </xs:documentation>
            </xs:annotation>
            <xs:attribute name="Type" type="xs:boolean" use="mandatory">
                <xs:annotation>
                    <xs:documentation>
                        Values: PowerShellClass (if there is a class in the Classes folder the object is building from),
                        XmlElement (if object will inherit objects from Xml elements -- needs varname attribute),
                        HashTable (if the object will be using key and value to populate). 
                        Default is XmlElement.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:element name="VarName" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        To define the object name
                    </xs:documentation>
                </xs:annotation>
                <xs:attribute name="SecurityType" type="xs:string" use="mandatory">
                    <xs:annotation>
                        <xs:documentation>
                            public or private, if private must include the name in the database
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:element>
            <xs:group ref="HashTableObjectElement"/>
            <xs:group ref="XMLElement"/>
            <xs:group ref="ClassElement"/>
        </xs:element>
    </xs:element>
    

    <xs:element name="Programs" maxOccurs="1">
        <xs:documentation>
            Whatever is defined here will be referenced by the alias user provides
        </xs:documentation>
        <xs:element name="Program" type="xs:string" minOccurs="1">
            <xs:attribute name="Alias" type="xs:string"/>
            <xs:documentation>
                Path the alias will be calling. If Internal, given path must start in the repo (functions must be in the powershell repo)
            </xs:documentation>
            <xs:attribute name="Type" type="xs:string">
                <xs:documentation>
                    External || Internal
                </xs:documentation>
            </xs:attribute>
        </xs:element>
    </xs:element>

    <xs:element name="Modules" maxOccurs="1">
        <xs:element name="Module" type="xs:string" minOccurs="1">
            <xs:annotation>
                <xs:documentation> <!-- TODO include modules outside repo if it isn't imported -->
                    Path for modules starting at powershell repo
                </xs:documentation>
            </xs:annotation>
        </xs:element>
    </xs:element>
    
    <xs:group name="TodoList">
        <xs:element name="Item">
            <xs:annotation>
                <xs:documentation>
                    You can include as many 'Item' tags, so long as you specify the rank of the item.  
                    The last one should not have any text within the node.
                </xs:documentation>
            </xs:annotation>
            <xs:attribute name="rank" type="xs:int" use="mandatory"/>
            <xs:attribute name="name" type="xs:string" use="mandatory"/>
            <xs:attribute name="Completed" type="xs:boolean" use="mandatory"/>
            <xs:group ref="TodoList"/>
        </xs:element>
    </xs:group>
    <xs:element name="Todo" maxOccurs="1">
        <xs:group ref="TodoList"/>
    </xs:element>

    <xs:element name="Calendar" maxOccurs="1">
        <xs:element name="SpecialDays" maxOccurs="1">
            <xs:element name="SpecialDay" minOccurs="1" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Must be in datetime format: MM/dd/yyyy 
                    </xs:documentation>
                </xs:annotation>
                <xs:attribute name="name" type="xs:datetime" use="mandatory">
                    <xs:annotation>
                        <xs:documentation>
                            Name of the day
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:element>
        </xs:element>
    </xs:element>
</xs:element>
</xs:schema>